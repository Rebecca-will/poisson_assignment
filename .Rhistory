drinking<-read.delim("./data/drinking.txt")
drinking<-read.delim("./data/drinking_assignment.txt")
library(readr)
View(drinking)
#EDA
hist(sex$packYears)
#EDA
hist(sex$packYears)
#EDA
hist(glass_week$packYears)
drinking<-read.delim("./data/drinking_assignment.txt")
#EDA
hist(glass_week$packYears)
View(drinking)
library(readr)
drinking<-read.delim("./data/drinking_assignment.txt")
#EDA
hist(glass_week$packYears)
#EDA
hist(drinking$packYears)
hist(drinking$sex)
hist(drinking$as.factor(sex))
hist(drinking$as.numeric(sex))
hist(drinking$glass_week)
barplot(table(drinking$sex))
library(doBy)
summaryBy(packYears ~ sex,data = drinking,
FUN = c(mean,sd, median))
summaryBy(glass_week ~ sex,data = drinking,
FUN = c(mean,sd,median))
summaryBy(packYears ~ sex,data = drinking,
FUN = c(mean,sd, median))
summaryBy(packYears ~ sex,data = drinking,
FUN = c(mean,sd, median), na.rm = TRUE)
#more EDA
library(ggplot2)
library(hrbrthemes)
ggplot(drinking, aes(glass_week, packYears)) +
geom_point() + geom_smooth()
ggplot(drinking, aes(glass_week, packYears)) +
geom_point() + geom_smooth(method = lm)
ggplot(drinking, aes(glass_week, packYears)) +
geom_point() + geom_smooth(na.rm=TRUE)
ggplot(drinking, aes(glass_week, packYears)) +
geom_point() + geom_smooth(method = lm, na.rm=TRUE)
drinking$sex<-factor(drinking$sex,
levels = c(0, 1),
labels=c("female", "male"))
library("ggpubr")
ggline(drinking, x = "sex", y = "drinks",
add = c("mean","jitter"),
order = c("female", "male"),
ylab = "Nr. of drinks", xlab = "sex")
ggline(drinking, x = "sex", y = "packYears",
add = c("mean","jitter"),
order = c("female", "male"),
ylab = "packYear", xlab = "sex")
drinking<-read.delim("./data/drinking_assignment.txt")
drinking$sex<-factor(drinking$sex,
levels = c(0, 1),
labels=c("female", "male"))
drinking<-read.delim("./data/drinking_assignment.txt")
ggline(drinking, x = "sex", y = "packYears",
add = c("mean","jitter"),
order = c("female", "male"),
ylab = "packYear", xlab = "sex")
ggline(drinking, x = "sex", y = "glass_week",
add = c("mean","jitter"),
order = c("female", "male"),
ylab = "glass_week", xlab = "sex")
model1 <- glm(glass_week ~ packYears, family = "poisson", data = drinking)
summary(model1)
model2 <- glm(glass_week ~ packYears, data = drinking)
summary(model1)
model2 <- glm(glass_week ~ packYears,family = 'binomial', data = drinking)
?glm
model2 <- glm(glass_week ~ packYears,family = 'gaussian', data = drinking)
summary(model1)
ggplot(data=drinking, aes(x=glass_week, y=packYears, color=sex)) +
geom_point() +
geom_smooth(method = "glm", method.args=list(family=('poisson')))
ggplot(drinking, aes(glass_week, packYears, color=sex)) +
geom_point() + geom_smooth(method=lm)
ggplot(drinking, aes(packYears, glass_week, color=sex)) +
geom_point() + geom_smooth(method=lm)
ggplot(drinking, aes(glass_week, packYears, color = sex)) +
geom_point() + geom_smooth()
#EDA
hist(ln(drinking$packYears))
#EDA
hist(log(drinking$packYears))
count_fields(drinking,'female'=='female')
table(drinking$'female')
table(drinking$female)
table(drinking$sex)
summaryBy(packYears ~ sex,data = drinking,
FUN = c(mean,sd, median), na.rm = TRUE)
table(drinking$packYears, NA = TRUE)
table(drinking$packYears, NA == TRUE)
colSums(is.na(drinking))
summaryBy(packYears ~ sex,data = drinking,
FUN = c(mean,sd, median), na.rm = TRUE)
summaryBy(glass_week ~ sex,data = drinking,
FUN = c(mean,sd,median))
drinke_female<-subset(drinking,sex == 'female')
colSums(is.na(drinke_female))
drinks_male<-subset(drinking,sex == 'male')
colSums(is.na(drinks_male))
pca <- prcomp(drinking)
pca <- prcomp(drinking$sex ~packYears)
pca <- prcomp(drinking$packYears,glass_week)
drinks_female<-subset(drinking,sex == 'female')
pca_male <- prcomp(drinks_male[, c('Glass_week', "packYears")], center = TRUE, scale. = TRUE)
pca_male <- prcomp(drinks_male[, c('glass_week', "packYears")], center = TRUE, scale. = TRUE)
pca_male <- prcomp(na.omit(drinks_male)[, c('glass_week', "packYears")], center = TRUE, scale. = TRUE)
biplot(pca_male)
summary(pca_male)
#more EDA
library(ggplot2)
library(hrbrthemes)
ggplot(drinking, aes(glass_week, packYears)) +
geom_point() + geom_smooth(na.rm=TRUE)
ggplot(drinking, aes(glass_week, packYears)) +
geom_point() + geom_smooth(method = lm, na.rm=TRUE)
ggplot(drinking, aes(glass_week, packYears)) +
geom_point() + geom_smooth(na.rm=TRUE) + labs(caption = 'smooth line')
ggplot(drinking, aes(glass_week, packYears)) +
geom_point() + geom_smooth(method = lm, na.rm=TRUE) + labs(caption = 'Linear model')
#EDA
hist(drinking$packYears)
hist(drinking$glass_week)
barplot(table(drinking$sex))
ggplot(drinking, aes(glass_week, packYears, color = sex)) +
geom_point() + geom_smooth()
ggplot(drinking, aes(glass_week, packYears, color=sex)) +
geom_point() + geom_smooth(method=lm)#which order of variables
library("ggpubr")
ggline(drinking, x = "sex", y = "packYears",
add = c("mean","jitter"),
order = c("female", "male"),
ylab = "packYear", xlab = "sex")
ggline(drinking, x = "sex", y = "glass_week",
add = c("mean","jitter"),
order = c("female", "male"),
ylab = "glass_week", xlab = "sex")
ggplot(drinking, aes(glass_week, packYears, color=sex)) +
geom_point() + geom_smooth(method=lm) + labs(caption = 'smooth line')
ggplot(drinking, aes(glass_week, packYears, color=sex)) +
geom_point() + geom_smooth(method=lm) + labs(caption = 'linear model')
ggplot(drinking, aes(glass_week, packYears, color = sex)) +
geom_point() + geom_smooth()+ labs(caption = 'smooth line')
ggline(drinking, x = "sex", y = "packYears",
add = c("median","jitter"),
order = c("female", "male"),
ylab = "packYear", xlab = "sex")
ggplot(data=drinking, aes(x=glass_week, y=packYears, color=sex)) +
geom_point() +
geom_smooth(method = "glm", method.args=list(family=('poisson')))
model <- ggplot(data=drinking, aes(x=glass_week, y=packYears, color=sex)) +
geom_point() +
geom_smooth(method = "glm", method.args=list(family=('poisson')))
plot(fitted(model), residuals(model), main = "Residual Plot",
xlab = "Fitted Values", ylab = "Residuals")
plot(fitted(model), residuals(model), main = "Residual Plot",
xlab = "Fitted Values", ylab = "Residuals", na.rm=TRUE)
plot(fitted(na.omit(model)), residuals(na.omit(model)), main = "Residual Plot",
xlab = "Fitted Values", ylab = "Residuals")
model1 <- glm(glass_week ~ sex, family = "poisson", data = drinking)
summary(model1)
model2 <- glm(glass_week ~ sex, family = "poisson", data = drinking)
summary(model2)
model1 <- glm(glass_week ~ sex, family = "poisson", data = drinking)
model2 <- glm(glass_week ~ packYears, family = "poisson", data = drinking)
summary(model1)
summary(model2)
deviance(model1)
confit(model1)
confint(model1)
1.556 *100
confint(model2)
1.025* 100
model <- ggplot(data=drinking, aes(x=glass_week, y=packYears, color=sex)) +
geom_point() +
geom_smooth(method = "glm", method.args=list(family=('poisson')))
ggplot(data=drinking, aes(x=glass_week, y=packYears, color=sex)) +
geom_point() +
geom_smooth(method = "glm", method.args=list(family=('poisson')))
#Q5
model3 <- glm(glass_week ~ packYears + sex, family = "poisson", data = drinking)
summary(model3)
confint(model3)
#Q5
model3 <- glm(glass_week ~ packYears*sex, family = "poisson", data = drinking)
summary(model3)
ggplot(drinking, aes(packYears, glass_week)) +
geom_point() + geom_smooth(na.rm=TRUE) + labs(caption = 'smooth line')
ggplot(drinking, aes(packYears, glass_week)) +
geom_point() + geom_smooth(method = lm, na.rm=TRUE) + labs(caption = 'Linear model')
model1 <- glm(sex ~ glass_week, family = "poisson", data = drinking)
ggplot(data=drinking, aes(x=packYears, y=glass_week, color=sex)) +
geom_point() +
geom_smooth(method = "glm", method.args=list(family=('poisson')))
ggplot(drinking, aes(packYears, glass_week, color=sex)) +
geom_point() + geom_smooth(method=lm) + labs(caption = 'linear model')
ggplot(drinking, aes(packYears, glass_week, color = sex)) +
geom_point() + geom_smooth()+ labs(caption = 'smooth line')
model1 <- glm(glass_week ~ sex, family = "poisson", data = drinking)
summary(model1)
confint(model1)
model2 <- glm(glass_week ~ packYears, family = "poisson", data = drinking)
summary(model2)
model2 <- glm(packYears ~glass_week, family = "poisson", data = drinking)
summary(model2)
model2 <- glm(glass_weel ~packYears, family = "poisson", data = drinking)
model2 <- glm(glass_week ~packYears, family = "poisson", data = drinking)
summary(model2)
#Q5
model3 <- glm(glass_week ~ packYears*sex, family = "poisson", data = drinking)
summary(model3)
confint(model3)
#Q5
model3 <- glm(glass_week ~ packYears, sex, family = "poisson", data = drinking)
#Q5
model3 <- glm(glass_week ~ packYears + sex, family = "poisson", data = drinking)
summary(model3)
ggplot(data=drinking, aes(x=packYears*sex, y=galss_week, color=sex)) +
geom_point() +
geom_smooth(method = "glm", method.args=list(family=('poisson')))
#Q5
model3 <- glm(glass_week ~ packYears*sex, family = "poisson", data = drinking)
pchisq(model3$deviance, df=model3$df.residual, lower.tail=FALSE)
#Q5
model3 <- glm(glass_week ~ packYears + sex, family = "poisson", data = drinking)
pchisq(model3$deviance, df=model3$df.residual, lower.tail=FALSE)
#Q5
model3 <- glm(glass_week ~ packYears*sex, family = "poisson", data = drinking)
qchisq(0.95, df.residual(model3))
pchisq(model3$deviance, df=model3$df.residual, lower.tail=FALSE)
pchisq(model3$deviance, df=model3$df.residual, lower.tail=FALSE)
pchisq(model2$deviance, df=model2$df.residual, lower.tail=FALSE)
pchisq(model2$deviance, df=model2$df.residual)
qchisq(0.95, df.residual(model3))
deviance(model3)
pchisq(model3$deviance, df=model3$df.residual, lower.tail=FALSE)
View(drinking)
model4 <- glm(glass_week ~ packYears*sex, family = "quasipoisson", data = drinking)
summary(model4)
confint(model4)
pchisq(model4$deviance, df=model4$df.residual, lower.tail=FALSE)
qchisq(0.95, df.residual(model4))
deviance(model4)
ggplot(data=drinking, aes(x=packYears, y=galss_week, color=sex)) +
geom_point() +
geom_smooth(method = "glm", method.args=list(family=('quasipoisson')))
ggplot(data=drinking, aes(x=packYears, y=glass_week, color=sex)) +
geom_point() +
geom_smooth(method = "glm", method.args=list(family=('quasipoisson')))
ggplot(data=drinking, aes(x=packYears, y=glass_week, color=sex)) +
geom_point() +
geom_smooth(method = "glm", method.args=list(family=('poisson')))
#Q5
model3 <- glm(glass_week ~ packYears*sex, family = "poisson", data = drinking)
summary(model3)
confint(model3)
8216.3/1307
library(AER)
AER::dispersiontest(model3)
AER::dispersiontest(model4)
pchisq(model4$deviance, df=model4$df.residual, lower.tail=FALSE)
qchisq(0.95, df.residual(model4))
deviance(model4)
8216.3/1392.2
summary(model4)
#EDA
hist(drinking$packYears)
hist(drinking$glass_week)
barplot(table(drinking$sex))
table(drinking$sex)
summaryBy(packYears ~ sex,data = drinking,
FUN = c(mean,sd, median), na.rm = TRUE)
summaryBy(glass_week ~ sex,data = drinking,
FUN = c(mean,sd,median))
biplot(pca_male)
summary(pca_male)
ggplot(drinking, aes(packYears, glass_week)) +
geom_point() + geom_smooth(na.rm=TRUE) + labs(caption = 'smooth line')
#Q5
model4 <- glm(glass_week ~ packYears*sex, family = "poisson", data = drinking)
summary(model4)
confint(model4)
model3 <- glm(glass_week ~ packYears + sex, family = "poisson", data = drinking)
summary(model3)
confint(model3)
pchisq(model4$deviance, df=model4$df.residual, lower.tail=FALSE)
qchisq(0.95, df.residual(model4))
deviance(model3)
model4 <- glm(glass_week ~ packYears*sex, family = "quasipoisson", data = drinking)
model5 <- glm(glass_week ~ packYears*sex, family = "quasipoisson", data = drinking)
summary(model5)
confint(model5)
pchisq(model5$deviance, df=model5$df.residual, lower.tail=FALSE)
qchisq(0.95, df.residual(model5))
deviance(model5)
library(readr)
drinking<-read.delim("./data/drinking_assignment.txt")
#EDA
hist(drinking$packYears)
hist(drinking$glass_week)
barplot(table(drinking$sex))
table(drinking$sex)
colSums(is.na(drinking))
summaryBy(packYears ~ sex,data = drinking,
FUN = c(mean,sd, median), na.rm = TRUE)
summaryBy(glass_week ~ sex,data = drinking,
FUN = c(mean,sd,median))
ggplot(drinking, aes(packYears, glass_week)) +
geom_point() + geom_smooth(na.rm=TRUE) + labs(caption = 'smooth line')
ggplot(drinking, aes(packYears, glass_week)) +
geom_point() + geom_smooth(method = lm, na.rm=TRUE) + labs(caption = 'Linear model')
ggplot(drinking, aes(packYears, glass_week, color = sex)) +
geom_point() + geom_smooth()+ labs(caption = 'smooth line')
model1 <- glm(glass_week ~ sex, family = "poisson", data = drinking)
summary(model1)
confint(model1)
model2 <- glm(glass_week ~packYears, family = "poisson", data = drinking)
summary(model2)
confint(model2)
ggplot(data=drinking, aes(x=packYears, y=glass_week, color=sex)) +
geom_point() +
geom_smooth(method = "glm", method.args=list(family=('poisson')))
ggplot(data=drinking, aes(x=packYears*sex, y=galss_week, color=sex)) +
geom_point() +
geom_smooth(method = "glm", method.args=list(family=('poisson')))
#Q5
model3 <- glm(glass_week ~ packYears*sex, family = "poisson", data = drinking)
summary(model3)
#Q5
model3 <- glm(glass_week ~ packYears + sex, family = "poisson", data = drinking)
summary(model3)
pchisq(model4$deviance, df=model4$df.residual, lower.tail=FALSE)
qchisq(0.95, df.residual(model4))
deviance(model3)
model5 <- glm(glass_week ~ packYears*sex, family = "quasipoisson", data = drinking)
summary(model5)
confint(model5)
#Q5
model3 <- glm(glass_week ~ packYears*sex, family = "poisson", data = drinking)
summary(model3)
model5 <- glm(glass_week ~ packYears*sex, family = "quasipoisson", data = drinking)
summary(model5)
AER::dispersiontest(model4)
pchisq(model4$deviance, df=model4$df.residual, lower.tail=FALSE)
qchisq(0.95, df.residual(model4))
deviance(model4)
data("iris")
library(DAAG)
library(rpart)
library(rpart.plot)
library(randomForest)
library(caret)
library(ggplot2)
library(lattice)
colSums(is.na(iris)) #there is no missing data
str(iris)
summary(iris)
head(iris)
set.seed(100)
train <- sample(nrow(iris), 0.7*nrow(iris), replace = FALSE)
train
TrainSet <- iris[train,]
ValidSet <- iris[-train,]
?createDataPartition
train_2 <- createDataPartition(iris$Species, p= 0.7, list = FALSE)
trainset_2 <- iris[train_2,]
validset_2 <- iris[-train_2,]
Dec_tree_iris <- rpart(Species ~ ., data = trainset_2, method = 'class') #is this the right dependent variable to put through?
rpart.plot(Dec_tree_iris)
summary(Dec_tree_iris)
printcp(Dec_tree_iris)
rf = randomForest(Species ~ ., data = trainset_2, ntree= 500, importance = TRUE)
importance(rf)
varImpPlot(rf, pch=16, col="black")
barplot(imp$MeanDecreaseGini, names.arg=imp$vars)
imp = as.data.frame(importance(rf))
imp = cbind(vars=rownames(imp), imp)
imp = imp[order(imp$MeanDecreaseGini),]
imp$vars = factor(imp$vars, levels=unique(imp$vars))
barplot(imp$MeanDecreaseGini, names.arg=imp$vars)
accuracy <- c()
for (i in 1:4) {
sample_rf <- randomForest(Species ~ ., data = trainset_2, ntree = 100, mtry = i)
predValid <- predict(sample_rf,validset_2, type = 'class')
accuracy[i] <- mean(predValid == validset_2$Species)
}
accuracy
predVal <- predict(random_forest, ValidSet, type = "class")
predVal <- predict(rf_3, ValidSet, type = "class")
rf_3 = randomForest(Species ~ ., data = trainset_3, ntree= 500, importance = TRUE)
predVal <- predict(rf_3, ValidSet, type = "class")
rf_3 = randomForest(Species ~ ., data = trainset_3, ntree= 500, importance = TRUE)
trainset_3 <- iris[train_3,]
validset_3 <- iris[-train_3,]
rf_3 = randomForest(Species ~ ., data = trainset_3, ntree= 500, importance = TRUE)
importance(rf_3)
train_3 <- createDataPartition(iris$Species, p= 0.5, list = FALSE)
trainset_3 <- iris[train_3,]
validset_3 <- iris[-train_3,]
library(caret)
confusionMatrix(pred_dec_tree, validset_2$Species, positive='y')
pred_dec_tree = predict(Dec_tree_iris, validset_2, type = 'class')
confusionMatrix(pred_dec_tree, validset_2$Species, positive='y')
ggplot(data=drinking, aes(x=packYears, y=glass_week, color=sex)) +
geom_point() +
geom_smooth(method = "glm", method.args=list(family=('poisson')))
pchisq(model5$deviance, df=model5$df.residual, lower.tail=FALSE)
qchisq(0.95, df.residual(model5))
barplot(summary(Dec_tree_iris)$variable.importance, main="Variable Importance Plot for Iris")
Dec_tree_iris <- rpart(Species ~ ., data = trainset_2, method = 'class') #is this the right dependent variable to put through?
rpart.plot(Dec_tree_iris)
summary(Dec_tree_iris)
printcp(Dec_tree_iris)
barplot(summary(Dec_tree_iris)$variable.importance, main="Variable Importance Plot for Iris")
imp = as.data.frame(importance(rf))
imp = cbind(vars=rownames(imp), imp)
imp = imp[order(imp$MeanDecreaseGini),]
imp$vars = factor(imp$vars, levels=unique(imp$vars))
barplot(imp$MeanDecreaseGini, names.arg=imp$vars)
?barplot
barplot(imp$MeanDecreaseGini, names.arg=imp$vars,main = 'Importance of the variable')
barplot(imp$MeanDecreaseGini, names.arg=imp$vars,main = 'Importance of the variable using "gini"')
train_3 <- createDataPartition(iris$Species, p= 0.5, list = FALSE)
trainset_3 <- iris[train_3,]
validset_3 <- iris[-train_3,]
pred_dec_tree_3 = predict(Dec_tree_iris, validset_3, type = 'class')
confusionMatrix(pred_dec_tree_3, validset_3$Species, positive='y')
set.seed(100)
train_3 <- createDataPartition(iris$Species, p= 0.5, list = FALSE)
trainset_3 <- iris[train_3,]
validset_3 <- iris[-train_3,]
pred_dec_tree_3 = predict(Dec_tree_iris, validset_3, type = 'class')
confusionMatrix(pred_dec_tree_3, validset_3$Species, positive='y')
train_3 <- createDataPartition(iris$Species, p= 0.5, list = FALSE)
trainset_3 <- iris[train_3,]
validset_3 <- iris[-train_3,]
pred_dec_tree_3 = predict(Dec_tree_iris, validset_3, type = 'class')
confusionMatrix(pred_dec_tree_3, validset_3$Species, positive='y')
train_3 <- createDataPartition(iris$Species, p= 0.5, list = FALSE)
trainset_3 <- iris[train_3,]
validset_3 <- iris[-train_3,]
pred_dec_tree_3 = predict(Dec_tree_iris, validset_3, type = 'class')
confusionMatrix(pred_dec_tree_3, validset_3$Species, positive='y')
train_3 <- createDataPartition(iris$Species, p= 0.5, list = FALSE)
trainset_3 <- iris[train_3,]
validset_3 <- iris[-train_3,]
pred_dec_tree_3 = predict(Dec_tree_iris, validset_3, type = 'class')
confusionMatrix(pred_dec_tree_3, validset_3$Species, positive='y')
class(imp$MeanDecreaseGini)
imp = as.data.frame(importance(rf))
imp
imp = cbind(vars=rownames(imp), imp)
imp
imp = imp[order(imp$MeanDecreaseGini),]
imp$vars = factor(imp$vars, levels=unique(imp$vars))
barplot(imp$MeanDecreaseGini, names.arg=imp$vars,main = 'Importance of the variable using "gini"')
accuracy <- c()
for (i in 1:4) {
sample_rf <- randomForest(Species ~ ., data = trainset_2, ntree = 100, mtry = i)
predValid <- predict(sample_rf,validset_2, type = 'class')
accuracy[i] <- mean(predValid == validset_2$Species)
}
accuracy
predVal <- predict(rf_3, ValidSet, type = "class") #jello pls show me
rf_3 = randomForest(Species ~ ., data = trainset_3, ntree= 500, importance = TRUE)
predVal <- predict(rf_3, ValidSet, type = "class") #jello pls show me
plotcp(Dec_tree_iris)
load("~/Desktop/RCSI/Poisson_Assignment/.RData")
summaryBy(packYears ~ sex,data = drinking,
FUN = c(mean,sd, median), na.rm = TRUE)
library(doBy)
summaryBy(packYears ~ sex,data = drinking,
FUN = c(mean,sd, median), na.rm = TRUE)
